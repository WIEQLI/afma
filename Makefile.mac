CC=mpicc
FF=mpif90
LD=mpif90

SCALEME_ROOT= $(HOME)/software/scaleme

OPTFLAGS= -O3 -march=core2 -mtune=core2
CINCDIR= -I$(SCALEME_ROOT)/include
LIBDIR= -L$(SCALEME_ROOT)/fma2 -L../gmres

LIBS= -lScaleME2 -lgmres -framework Accelerate

CFLAGS= $(OPTFLAGS) -Wall -D_MACOSX
FFLAGS= $(OPTFLAGS) -Wall -D_MACOSX
LFLAGS= $(OPTFLAGS)

OBJS64= fsgreen.o integrate.o mlfma.o scaleme.o itsolver.o \
	excite.o io.o measure.o frechet.o cg.o

OBJS32= $(OBJS64:.o=.o32)

all: adbim64 afma64 adbim32 afma32
	@echo "Combined build (32 and 64 bits)."
	lipo -create adbim64 adbim32 -output adbim
	lipo -create afma64 afma32 -output afma

adbim64: $(OBJS64) dbim.o
	@echo "Building acoustic DBIM (64 bits)."
	$(LD) $(LFLAGS) -m64 -o $@ dbim.o $(OBJS64) $(LIBDIR) $(LIBS)

afma64: $(OBJS64) main.o
	@echo "Building acoustic MLFMA (64 bits)."
	$(LD) $(LFLAGS) -m64 -o $@ main.o $(OBJS64) $(LIBDIR) $(LIBS)

adbim32: $(OBJS32) dbim.o32
	@echo "Building acoustic DBIM (32 bits)."
	$(LD) $(LFLAGS) -m32 -o $@ dbim.o32 $(OBJS32) $(LIBDIR) $(LIBS)

afma32: $(OBJS32) main.o32
	@echo "Building acoustic MLFMA (32 bits)."
	$(LD) $(LFLAGS) -m32 -o $@ main.o32 $(OBJS32) $(LIBDIR) $(LIBS)

clean:
	rm -f $(OBJS64) $(OBJS32) main.o main.o32 dbim.o dbim.o32 \
	adbim afma adbim32 afma32 adbim64 afma64 *.core core

.SUFFIXES: .o .o32 .f .c

.f.o:
	$(FF) $(FFLAGS) -m64 -o $@ -c $<

.c.o:
	$(CC) $(CFLAGS) -m64 $(CINCDIR) -o $@ -c $<

.f.o32:
	$(FF) $(FFLAGS) -m32 -o $@ -c $<

.c.o32:
	$(CC) $(CFLAGS) -m32 $(CINCDIR) -o $@ -c $<
